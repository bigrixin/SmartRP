@model SmartRP.Domain.EnrolSubjectViewModel

@{
	ViewBag.Title = "Enrol Semester";
}

<script>
	$(document).ready(function () {
		jQuery.validator.methods.date = function (value, element) {
			var isfirefox = navigator.userAgent.indexOf('Firefox') > -1;
			var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
			var isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
			if (isfirefox || isSafari || isChrome) {
				var d = new Date();
				return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
			} else {
				return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
			}
		};
	});
</script>


<div class="col-sm-3 col-md-2 sidebar">
	<br />
	<h4>@ViewBag.TypeOfUser</h4>
	@Html.Action("Menu", (string)@ViewBag.TypeOfUser)
</div>

<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
	<p class="bg-light" style="padding-top:8px;">
		&nbsp; <span class="glyphicon glyphicon-home"></span>
		&nbsp; <span class="fa fa-angle-right"></span>&nbsp;
		@Html.ActionLink(" My profile", "myaccount", (string)@ViewBag.TypeOfUser, null, null)
		&nbsp; <span class="fa fa-angle-right"></span>&nbsp;
		Enroll a subject
	</p>
	<h3>Enroll a subject </h3>

	@using (Html.BeginForm())
	{
	@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<hr />
			<div class="alert alert-success alert-dismissable fade in">
				<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
				<strong>Information:</strong> You use this page to enroll into a subject of semester. Pick up one from the existing subjects to enroll. This is essential for you to use other functions.
			</div>

			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.ID)
			@Html.HiddenFor(model => model.UserID)


			<div class="form-group">
				@Html.LabelFor(model => model.StartAt, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">

					@Html.EditorFor(model => Model.StartAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
					@Html.ValidationMessageFor(model => model.StartAt, "", new { @class = "text-danger" })
				</div>

				@Html.LabelFor(model => model.EndAt, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.EndAt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
					@Html.ValidationMessageFor(model => model.EndAt, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.SubjectID, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.DropDownListFor(model => model.SubjectID, Model.SubjectNameDropDownList, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
				</div>


				@Html.LabelFor(model => model.TermName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-4">
					@Html.EditorFor(model => model.TermName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
					@Html.ValidationMessageFor(model => model.TermName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<hr />

					<button onclick="goBack()" class="btn btn-default">Go Back</button>
					<script>
						function goBack() {
							window.history.back();
						}
					</script>
					<input type="submit" value="Enrol" class="btn btn-success" />
				</div>
			</div>
		</div>
	}

</div>