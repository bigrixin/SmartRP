@model SmartRP.Domain.TermEditModel

@{
	ViewBag.Title = "Edit";
}

<script src="@Url.Content("~/Scripts/Shared/datepicker.js")" type="text/javascript"></script>

<div class="container-fluid">
	<div class="row">
		<div class="col-sm-3 col-md-2 sidebar">
			<br />
			<h4>@ViewBag.TypeOfUser</h4>
			@Html.Action("Menu", (string)@ViewBag.TypeOfUser)

		</div>
		<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
			<p class="bg-light" style="padding-top:8px;">
				&nbsp; <span class="glyphicon glyphicon-home"></span>
				&nbsp; <span class="fa fa-angle-right"></span>&nbsp;
				@Html.ActionLink(" Manage Semester", "manage-semester", (string)@ViewBag.TypeOfUser, null, null)
				&nbsp; <span class="fa fa-angle-right"></span>&nbsp;
				Edit
			</p>
			<div class="alert alert-success alert-dismissable fade in">
				<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
				<strong>Information: </strong> In this page, you can edit semester
			</div>
	 
			@using (Html.BeginForm())
			{
			@Html.AntiForgeryToken()

				<div class="form-horizontal">

					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.ID)
					@Html.HiddenFor(model => model.CoordinatorID)
					<div class="form-group">
						@Html.LabelFor(model => model.TermName, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.TermName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
							@Html.ValidationMessageFor(model => model.TermName, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.StartAt, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							<div class='input-group date datetimepicker'>
								@Html.EditorFor(model => model.StartAt, new { htmlAttributes = new { @class = "form-control", @placeholder = "DD/MM/YYYY" } })
								<span class="input-group-addon">
									<span class="glyphicon glyphicon-calendar"></span>
								</span>
							</div>
							@Html.ValidationMessageFor(model => model.StartAt, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.EndAt, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							<div class='input-group date datetimepicker'>
								@Html.EditorFor(model => model.EndAt, new { htmlAttributes = new { @class = "form-control", @placeholder = "DD/MM/YYYY" } })
								<span class="input-group-addon">
									<span class="glyphicon glyphicon-calendar"></span>
								</span>
							</div>
							@Html.ValidationMessageFor(model => model.EndAt, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.CheckBoxSubjectNames, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							<div class="alert alert-warning" role="alert" style="overflow:auto; max-height:200px">
								@for (int i = 0; i < Model.CheckBoxSubjectNames.Count; i++)
								{
								<table>
									<tr>
										<th style="width:120px">@Html.DisplayFor(m => m.CheckBoxSubjectNames[i].SubjectName)</th>
										<th>@Html.CheckBoxFor(m => m.CheckBoxSubjectNames[i].IsSelected, htmlAttributes: new { @style = "cursor:pointer;zoom:1.2;" })</th>
										@Html.HiddenFor(m => m.CheckBoxSubjectNames[i].SubjectName)
									</tr>
								</table>
								}
							</div>
							@Html.ValidationMessageFor(model => model.EndAt, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Save" class="btn btn-success" />
							<button onclick="goBack()" class="btn btn-default">Go Back</button>
							<script>
							function goBack() {
								window.history.back();
							}
							</script>
						</div>
					</div>
				</div>
			}
 
		</div>
	</div>
</div>