@model SmartRP.Domain.TermEditModel
@using SmartRP.Domain
@{
	ViewBag.Title = "Create";
}

<script src="@Url.Content("~/Scripts/Shared/datepicker.js")" type="text/javascript"></script>
<div class="container-fluid">
	<div class="row">
		<div class="col-sm-3 col-md-2 sidebar">
			<br />
			<h4>@ViewBag.TypeOfUser</h4>
			@Html.Action("Menu", (string)@ViewBag.TypeOfUser)

		</div>
		<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
			<p class="bg-light" style="padding-top:8px;">
				&nbsp; <span class="glyphicon glyphicon-home"></span>
				&nbsp; <span class="fa fa-angle-right"></span>&nbsp;
				@Html.ActionLink(" Manage Semester", "manage-semester", (string)@ViewBag.TypeOfUser, null, null)
			</p>
			<div class="alert alert-success alert-dismissable fade in">
				<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
				<strong>Information:</strong> Add a new semester!
			</div>
			@using (Html.BeginForm())
			{
			@Html.AntiForgeryToken()
				@Html.HiddenFor(model => model.CoordinatorID)
				<div class="form-horizontal">
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<div class="form-group">
						@Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@{
								var currentYear = DateTime.Now.Year;
							}
							@Html.DropDownListFor(m => m.Year,
								new SelectList(
									new List<Object>{
											 new { value = @currentYear , text = @currentYear},
											 new { value = @currentYear+1 , text = @currentYear+1},
										}, "value", "text", 0), new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })

						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.DropDownListFor(model => model.Session, new SelectList(Enum.GetValues(typeof(Session))), new { @class = "form-control" })
							@Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.CheckBoxSubjectNames, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							<div class="alert alert-warning" role="alert" style="overflow:auto; max-height:200px">
								@for (int i = 0; i < Model.CheckBoxSubjectNames.Count; i++)
								{
								<table>
									<tr>
										<th style="width:120px">@Html.DisplayFor(m => m.CheckBoxSubjectNames[i].SubjectName)</th>
										<th>@Html.CheckBoxFor(m => m.CheckBoxSubjectNames[i].IsSelected, htmlAttributes: new { @style = "cursor:pointer;zoom:1.2;" })</th>
										@Html.HiddenFor(m => m.CheckBoxSubjectNames[i].SubjectName)
									</tr>

								</table>
								}
							</div>
							@Html.ValidationMessageFor(model => model.EndAt, "", new { @class = "text-danger" })
						</div>
					</div>


					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Create" class="btn btn-success" />
						</div>
					</div>
				</div>

				@Html.ActionLink("Back to List", "Index")
			}

		</div>
	</div>
</div>
