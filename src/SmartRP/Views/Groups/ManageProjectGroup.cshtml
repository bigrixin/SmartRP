@model IEnumerable<SmartRP.Domain.GroupViewModel>
@{
	ViewBag.Title = "Manage my project group";
}

<div class="container-fluid">
	<div class="row">
		<div class="col-sm-3 col-md-2 sidebar">
			<br />
			<h4>@ViewBag.TypeOfUser</h4>
			@Html.Action("Menu", (string)@ViewBag.TypeOfUser)
		</div>
		<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
			<p class="bg-light" style="padding-top:8px;">
				&nbsp; <span class="glyphicon glyphicon-home"></span>
				&nbsp; <span class="fa fa-angle-right"></span>&nbsp;
				@Html.ActionLink(" Manage Groups", "manage-project-group", (string)@ViewBag.TypeOfUser, null, null)
			</p>

			<div class="alert alert-success alert-dismissable fade in">
				<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
				<strong>Information:</strong> Projects posted by me or I have picked up project groups !
			</div>

			@foreach (var item in Model)
			{
				var groupID = item.ID;
				var groupToggleID = "#" + item.ID;
				<hr />
				<div class="alert alert-warning">
					Group #@Html.DisplayFor(modelItem => item.ID)
					<button type="button" class="btn btn-default btn-xs" data-toggle="collapse" data-target=@groupToggleID title="Collapsible the group details">Details</button>
					<span> in </span>
					Project
					#@Html.DisplayFor(modelItem => item.ProjectID)
					@Html.ActionLink(" Details", "Details", "Projects", new { projectID = item.ProjectID }, new { @class = "btn btn-default btn-xs ", title = "Look the project details in a blank tab", target = "_blank" })
					@if(ViewBag.UerID==item.PublisherID)
					{
					  <span style="color:green"> posted by me</span>
					}

				</div>
				<div id=@groupID class="collapse">
					<dl class="dl-horizontal">
						<dt>
							Group Name
						</dt>

						<dd>
							@Html.DisplayFor(modelItem => item.Name)
						</dd>

						<dt>
							Description
						</dt>

						<dd>
							@Html.DisplayFor(modelItem => item.Description)
						</dd>

						<dt>
							Status
						</dt>

						<dd>
							@Html.Partial("_GroupStatus", item.Status)
						</dd>

						<dt>
							Size
						</dt>

						<dd>
							@{	var membersCount = (int)item.Size - (int)item.Vacancy; }
							<span>@membersCount</span> /
							@Html.DisplayFor(modelItem => item.Size)
						</dd>

						<dt>
							Created
						</dt>

						<dd>
							@Html.DisplayFor(modelItem => item.CreatedAt)
						</dd>

						<dt>
							Updated
						</dt>

						<dd>
							@Html.DisplayFor(modelItem => item.UpdatedAt)
						</dd>
						<dt>
							Supervisor
						</dt>

						<dd>
							@Html.ActionLink("Supervisor #" + item.SupervisorID, "Profile", "Supervisor", new { id = item.SupervisorID }, htmlAttributes: new { target = "_blank" })
						</dd>
						<dt>
							Co-Supervisor
						</dt>

						<dd>
							@if (item.CoSupervisorID != null)
							{
							@Html.ActionLink("CoSupervisor #" + item.CoSupervisorID, "Profile", "CoSupervisor", new { id = item.CoSupervisorID }, htmlAttributes: new { target = "_blank" })
							}
						</dd>

						<dt>
							Ext-Supervisor
						</dt>

						<dd>
							@if (item.ExtSupervisorID != null)
							{
							@Html.ActionLink("ExtSupervisor #" + item.ExtSupervisorID, "Profile", "ExternalSupervisor", new { id = item.ExtSupervisorID }, htmlAttributes: new { target = "_blank" })
							}
						</dd>
						<dt>Approved NO</dt>
						<dd>@Html.DisplayFor(modelItem => item.ApprovedNO)</dd>
						<dt> - </dt>
						<dd> </dd>
						<dt>
							Joined Students
						</dt>

						<dd>
							@foreach (var student in item.JoinedStudents)
							{
							@Html.ActionLink(" " + student.Firstname, "Profile", "Student", new { id = student.ID }, new { @class = "fa fa-user", target = "_blank" })
								if (student.ID == item.LeaderID)
								{
								<span style="color:red"> (Leader)</span>
								}
								<span> </span>
							}
						</dd>
					</dl>
				</div>
				<dl class="dl-horizontal">
					<dt>Group reports</dt>
					<dd>
						@{ int couter = 1;
							if (item.PostedReports != null)
							{
								foreach (var report in item.PostedReports)
								{
								<div class="alert alert-success" style="padding-bottom:5px;">
									<dl class="dl-horizontal" style="margin-bottom:5px;">

										<dt>Report No.</dt>
										<dd><span>@couter</span> </dd>
										<dt>Type:</dt>
										<dd>@report.ReportType.ToString()</dd>

										<dt>Description: </dt>
										<dd>@report.Description</dd>
										<dt><span>Update</span></dt>
										<dd>@report.UpdatedAt.ToString()</dd>
										<dt>Attachment:</dt>
										<dd>
											@if (String.IsNullOrEmpty(report.FileURL))
											{
											<span style="color:red">- No attachment -</span>
											}
											else
											{
												var previewName = @Url.Content(report.FileURL);
												<a class='btn btn-default btn-sm custom' href="@previewName" role='button' target='_blank' id="preview">Preview</a>
											}
										</dd>
										<dt>Comments</dt>
										<dd>
											@if (!String.IsNullOrEmpty(@report.Comments))
											{

											<span style="color:firebrick"> @Html.Raw(Html.Encode(@report.Comments).Replace("\n", "<br />")) </span>
											}
											<br />
											@Html.ActionLink(" Comment report", "CommentGroupReport", "Groups", new { projectID = item.ProjectID, groupID = item.ID, reportID = report.ID }, new { @class = "btn btn-warning btn-sm fa fa-pencil-square-o", @title = "Give the report a comment" })

											@{
												couter++;
											}
										</dd>
									</dl>
								</div>
													}
												}
						}
					</dd>

					<dt>Group Mark</dt>
					<dd>
						@if (item.PostedReports.Count() != 0 && ViewBag.TypeOfUser == "Coordinator")
						{
				  		@Html.ActionLink(" Mark", "MarkProjectGroup", "Groups", new { projectID = item.ProjectID, groupID = item.ID }, new { @class = "btn btn-warning btn-sm fa fa-pencil-square-o", @title = "Mark grade for the group" })
						}
						else
						{
						<span style="color:green"> - Group mark not available -</span>
						}
					</dd>
				</dl>
												}
		</div>
	</div>
</div>
