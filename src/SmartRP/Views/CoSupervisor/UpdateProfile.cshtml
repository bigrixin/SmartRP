@using MvcCheckBoxList.Model
@model SmartRP.Domain.CoSupervisorProfileEditModel

@{
	ViewBag.Title = "UpdateProfile";
}
<style type="text/css">
	html > body label {
		padding: 0px 5px 3px 3px !important;
		cursor: pointer;
	}
</style>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/jQuery.FileUpload/jquery.fileupload.js"></script>
<script src="~/Scripts/jQuery.FileUpload/jquery.fileupload-ui.js"></script>
<script src="~/Scripts/jQuery.FileUpload/jquery.fileupload-process.js"></script>
<script src="@Url.Content("~/Scripts/Shared/uploadfile.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Shared/datepicker.js")" type="text/javascript"></script>
<script src="~/Scripts/Shared/suggestedkeyword.js"></script>
<div class="container-fluid">
	<div class="row">
		<div class="col-sm-3 col-md-2 sidebar">
			<h3>@Model.UserType</h3>
			@Html.Action("Menu", @Model.UserType)

		</div>
		<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
			@using (Html.BeginForm())
			{
			@Html.AntiForgeryToken()

				<div class="form-horizontal">
					<p class="bg-light" style="padding-top:8px;">
						&nbsp; <span class="glyphicon glyphicon-home"></span>
						&nbsp; <span class="fa fa-angle-right"></span>&nbsp;
						@Html.ActionLink(" My profile", "myaccount", @Model.UserType, null, null)
						&nbsp; <span class="fa fa-angle-right"></span>&nbsp;
					 Update
					</p>

					<hr />
					@{
						if (String.IsNullOrEmpty(@Model.Firstname))
						{
						@:<div class="alert alert-danger">
							<div class="alert alert-danger alert-dismissable text-center">
								<a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
								<h4>
									<strong>Your Academic Profile </strong><br />You need to create an academic profile in order to use this system.
									You can update your profile any time
								</h4>
							</div>
						}
					}
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.HiddenFor(model => model.ID)
					<div class="form-group">
						@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
							@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-4">
							@Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
						</div>

						@Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-4">
							@Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-4">
							@Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "02 1234 5678 or 0123456789" } })
							@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
						</div>

						@Html.LabelFor(model => model.MySupervisorID, new { @class = "control-label col-md-2" })
						<div class="col-md-4">
							@Html.DropDownListFor(model => model.MySupervisorID, Model.SupervisorDropDownList, new { @class = "form-control", @required = "required" })

							@Html.ValidationMessageFor(model => model.MySupervisorID, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.TextAreaFor(model => model.Introduction, new
							 {
								 @class = "form-control",
								 @rows = "5",
								 @placeholder = "Brief describe your educational background",
								 @required = "required"
							 })
							@Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
						</div>
					</div>

					<hr />
					<!-- begin upload file -->
					<input id="uploadURL" value="@ViewBag.PathUpload" hidden="hidden" />
					<input id="deleteURL" value="@ViewBag.PathDelete" hidden="hidden" />
					<div class="form-group">
						@Html.LabelFor(model => model.ResumeURL, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							<input type="file" name="files" id="uploadfile" accept="image/*, application/pdf, application/msword,
            application/vnd.openxmlformats-officedocument.wordprocessingml.document" capture class="btn btn-default btn-sm" style="display:none" />
							<span style="color:red">
								* Allowed upload file type: .doc .docx .pdf .jpg .png; Max. 5 MB
							</span>
							<div class="progress">
								<div id="uploadfileBar" class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
									<div class="sr-only">0% complete</div>
								</div>
							</div>
							<div class="col-md-2">
								<a class='btn btn-default btn-sm custom' href="" role='button' target='_blank' style="display:none" id="preview">Preview</a>
							</div>
							<div class="col-md-2">
								<input type="button" name="cancelUploadfile" id="cancelUploadfile" class="btn btn-default btn-sm custom" value="Cancel" style="display:none" />
							</div>
						</div>

						<div class="col-md-offset-2 col-md-10" hidden="hidden">
							@Html.EditorFor(model => model.ResumeURL, new { htmlAttributes = new { @class = "form-control", @id = "fileRecord", @readonly = "readonly", @value = @ViewBag.fileURL } })
							@Html.ValidationMessageFor(model => model.ResumeURL, "", new { @class = "text-danger" })
						</div>
					</div>
					<!-- end upload file -->

					<div class="form-group">
						@Html.LabelFor(model => model.KeywordList, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10 listInterest">
							<div class="alert alert-warning" role="alert" style="overflow:auto; max-height:200px">
								@{
									var htmlListInfo = new HtmlListInfo(HtmlTag.table, 2, null, TextLayout.Default, TemplateIsUsed.No);

									@Html.CheckBoxListFor(
										model => model.SelectedKeywordIDs,      //selected id array for save
										model => model.KeywordList,           //all list
										item => item.ID,                       //item id
										item => item.Title,                    //item name
										model => model.SelectedKeywords,  //for saved item which have selected
										htmlListInfo)                          //customer format
								}
							</div>
						</div>
						<div class="form-group" hidden="hidden">
							<div class="col-md-offset-2 col-md-10">
								@Html.LabelFor(model => model.SuggestedKeyword)
								<input type="checkbox" id="inputKeyword" onclick="SuggestedKeywordCheckbox()" style="cursor:pointer">
							</div>
							<div class="col-md-offset-2 col-md-10">
								@Html.TextAreaFor(model => model.SuggestedKeyword, new { @class = "form-control", @id = "suggested-keyword", @placeholder = "Keyword1: description; Keyword2: description; ...", @Rows = 2, @style = "display:none" })
								@Html.ValidationMessageFor(model => model.SuggestedKeyword, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Save and Next" class="btn btn-success" />
						</div>
					</div>
				</div>
			}

		</div>

	</div>
</div>
</div>